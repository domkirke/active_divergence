data:
  module: VideoDataModule
  dataset:
    root_directory: /fast-1/datasets/destruction512
#    flatten: True
    sequence:
      length: 16
      idx: -2
  transforms:
    transforms: [{type: Normalize, args: [0., 1.]},
                 {type: Dequantize, kwargs: {range: [0, 255]}}]

  loader:
    batch_size: 1
    #num_workers: 8
    shuffle: 1

check: 1

model:
  type: ModulatedGAN
  discriminator:
    type: ConvEncoder
    args:
      layer: DownsamplingConvBlock
      channels: [16,16,16,16,16,16,16,16,16]
      kernel_size: [5,5,5,5,5,5,5,5]
      nn_lin: LeakyReLU
      out_nnlin: Sigmoid
      norm: pixel
      bias: False
      mode: forward+
      block_args:
        downsample: 2
        n_convs_per_block: 2
      reshape_method: flatten
      target_shape: 1
  encoder:
    type: MLPEncoder
    mode: sequential
    args:
      nlayers: 2
      target_shape: &mod_input 128
      norm: batch
      normalize: True
  generator:
    type: DeconvEncoder
    args:
      layer: ModUpsamplingBlock
      #channels: [8,16,32,64,128]
      channels: [16,16,16,16,16,16,16,16,16]
      kernel_size: [5,5,5,5,5,5,5,5]
      norm: pixel
      bias: False
      mode: skip
      block_args:
        mod_input: *mod_input
        upsample: 2
        n_convs_per_block: 2
      nn_lin: LeakyReLU
      out_nnlin: Tanh 
      reshape_method: channel
  latent:
    dist: Normal
    dim: 128
  training:
    #balance: [5, 1]
    margin: 0.1
    invert: 0
    mode: "adv"
    #wgan_clip: 0.02
    lr: [5.e-5, 5.e-5]
    #r1: 1.0
    #path_length: 1.0
    #training_schedule: [2,2,2,2,2,2,2]
    #transition_schedule: [1,1,1,1,1,1,1,1]
    training_schedule: [100, 100, 100, 100, 100, 100, 100]
    transition_schedule: [50, 50, 50, 50, 50, 50, 50, 50]
    save:
      path: &dir /slow-1/axel/active_divergence/video
      name: &name style-gan-destruction

callbacks:
  [
    { type: LearningRateMonitor, args: {logging_interval: "epoch"} },
    { type: ModelSummary, args: {max_depth: 1} },
    { type: ModelCheckpoint, args: {dirpath: *dir, filename: *name, every_n_epochs: 1, save_last: True, epoch_period: 10} },
    { type: DissectionMonitor, args: {monitor_epochs: 1, embedding_epochs: 10} },
    { type: ImgReconstructionMonitor }
  ]
